<map version="1.0.1"><node CREATED="1593658153672" ID="ID_root" MODIFIED="1593658153672" TEXT="Jwt(Json Web Token)"><node CREATED="1593658153672" ID="ID_9f581f8a189f" POSITION="right" MODIFIED="1593658153672" TEXT="1. 传统跨域认证的问题"><node CREATED="1593658153672" ID="ID_43e1711ef7d2" MODIFIED="1593658153672" TEXT="流程"><node CREATED="1593658153672" ID="ID_ed3764c4a14b" MODIFIED="1593658153672" TEXT="1. Client 发送消息给用户和密码"></node><node CREATED="1593658153672" ID="ID_7f82afbf4641" MODIFIED="1593658153672" TEXT="2.服务器验证通过，在当前对话(session)里面保存相关数据，比如：用户角色，登录时间等等"></node><node CREATED="1593658153672" ID="ID_1ba155d9de8f" MODIFIED="1593658153672" TEXT="3.服务器向用户返回一个session_id ，写入用户的Cookie"></node><node CREATED="1593658153672" ID="ID_2a4836047cca" MODIFIED="1593658153672" TEXT="4.用户随后的每一次请求，都会通过Cookie，将session_id传回服务器"></node><node CREATED="1593658153672" ID="ID_8e3ba7a0ed8e" MODIFIED="1593658153672" TEXT="5.服务器收到session_id，找到前期保存的数据，由此得知用户的身份"></node></node><node CREATED="1593658153672" ID="ID_fb3e9a605778" MODIFIED="1593658153672" TEXT="优点"><node CREATED="1593658153672" ID="ID_34cd7d91c3a2" MODIFIED="1593658153672" TEXT="子主题"></node></node><node CREATED="1593658153672" ID="ID_55de48a688f1" MODIFIED="1593658153672" TEXT="缺点"><node CREATED="1593658153672" ID="ID_024ec6ee9ec4" MODIFIED="1593658153672" TEXT="1. 扩展性不好: 服务器集群，跨域服务的导向架构，就要session共享"></node></node></node><node CREATED="1593658153672" ID="ID_e497483564dc" POSITION="right" MODIFIED="1593658153672" TEXT="2. Jwt原理"><node CREATED="1593658153672" ID="ID_11687eec71de" MODIFIED="1593658153672" TEXT="1. 同传统跨域认证问题的“流程”"></node><node CREATED="1593658153672" ID="ID_9b84ae19816d" MODIFIED="1593658153672" TEXT="2. 返回了一个JSON对象，比如:&amp;lt;div&amp;gt;{&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;quot;Username&amp;quot;:&amp;quot;darrykinger&amp;quot;,&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;quot;RoleName&amp;quot;:&amp;quot;Admin&amp;quot;,&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;quot;Expired&amp;quot;:&amp;quot;2020-07-31&amp;quot;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;}&amp;lt;/div&amp;gt;"></node><node CREATED="1593658153673" ID="ID_12e90a3bca7e" MODIFIED="1593658153673" TEXT="3. 用户与服务器端通信的时候，都要发回这个JSON。服务器完全只靠这个对象认定用户身份。为了防止用户篡改数据，服务器在生成这个对象的时候，会加上一个签名"></node></node><node CREATED="1593658153673" ID="ID_85d7feece573" POSITION="right" MODIFIED="1593658153673" TEXT="3. JWT的数据结构"><node CREATED="1593658153673" ID="ID_8524ed40ab5b" MODIFIED="1593658153673" TEXT="Jwt结构"><node CREATED="1593658153673" ID="ID_7faf0c85e54f" MODIFIED="1593658153673" TEXT="&amp;lt;br&amp;gt;"></node></node><node CREATED="1593658153673" ID="ID_1bf6f62bed41" MODIFIED="1593658153673" TEXT="组成:"><node CREATED="1593658153673" ID="ID_d5f689446d87" MODIFIED="1593658153673" TEXT="1. 中间用.分割成三个部分,JWT内部是没有换行的"></node><node CREATED="1593658153673" ID="ID_222d1964af23" MODIFIED="1593658153673" TEXT="JWT的三个部分:&amp;lt;div&amp;gt;1. Header(头部)&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;2.Payload(负载)&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;3.Signature(签名）&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;Header.Payload.Signature&amp;lt;/div&amp;gt;"></node></node><node CREATED="1593658153673" ID="ID_bd361d0ade22" MODIFIED="1593658153673" TEXT="1. Header 部分"><node CREATED="1593658153673" ID="ID_56c8ea62b1a3" MODIFIED="1593658153673" TEXT="Json对象,描述JWT的元数据:&amp;lt;div&amp;gt;{&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;quot;alg&amp;quot;: &amp;quot;HS256&amp;quot;,&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;quot;typ&amp;quot;: &amp;quot;JWT&amp;quot;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;}&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;alg:表示签名用到的算法，默认:HMAC SHA256(写成:HS256)&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;typ: 表示这个令牌(token)的类型，JWT令牌写成JWT&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;将该JSON对象使用Base64URL算法转换成字符串&amp;lt;/div&amp;gt;"></node></node><node CREATED="1593658153673" ID="ID_f80175eda337" MODIFIED="1593658153673" TEXT="2. Payload 部分"><node CREATED="1593658153673" ID="ID_c5b3cf3952e9" MODIFIED="1593658153673" TEXT="JSON对象,用来存放实际需要传递的数据。JWT规定了7个官方字段：&amp;lt;div&amp;gt;iss (issuer)：签发人&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;exp(expiration time) :过期时间&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;sub (subject):主题&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;aud (audience)：受众&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;nbf(Not Before):生效时间&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;ia t(Issued At): 签发时间&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;jti( Jwt ID)：编号&amp;lt;/div&amp;gt;"></node><node CREATED="1593658153673" ID="ID_723916ac6b2d" MODIFIED="1593658153673" TEXT="定义自己的私有字段:&amp;lt;div&amp;gt;sub:&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;name:&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;admin:&amp;nbsp;&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;userID:&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;等别的私有字段&amp;lt;/div&amp;gt;"></node><node CREATED="1593658153673" ID="ID_4ab808d116c3" MODIFIED="1593658153673" TEXT="依旧是使用Base64URL处理，由于Base64URL都是可以被解码的，所以，不要将私密信息放到这里"></node></node><node CREATED="1593658153673" ID="ID_367cbe889dd1" MODIFIED="1593658153673" TEXT="3. Signature 部分"><node CREATED="1593658153673" ID="ID_113b7520ae71" MODIFIED="1593658153673" TEXT="实现:Signature 是对前面两个部分的签名，防止数据的篡改"></node><node CREATED="1593658153673" ID="ID_f1ed04d862fe" MODIFIED="1593658153673" TEXT="原理:&amp;lt;div&amp;gt;1. 指定一个密钥(secret)，only server Know it&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;2. 使用Header部分的alg签名算法(默认HMAC SHA256)&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;公式如下:&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;HMACSHA256(&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;base64UrlEncode(header)+&amp;quot;.&amp;quot;+Base64UrlEncode(payload), 密钥(secret))&amp;lt;/div&amp;gt;"></node></node></node><node CREATED="1593658153673" ID="ID_f943c5dbb77b" POSITION="right" MODIFIED="1593658153673" TEXT="4. JWT的使用方式"><node CREATED="1593658153673" ID="ID_99c2eeeb63e1" MODIFIED="1593658153673" TEXT="存储：&amp;lt;div&amp;gt;生成的Json Web Token ，可以存储在Cookie里面， 也可以存储在localStorage&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;使用：&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;客户端每次与服务器通信，都要带上这个JWT，也可以放到Cookie里面自动发送，但是不能做到跨域&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;所以最好放到Http请求头的Authorization字段里面&amp;lt;/div&amp;gt;"></node></node><node CREATED="1593658153673" ID="ID_5d8f7b806dd9" POSITION="right" MODIFIED="1593658153673" TEXT="5. JWT的特点"><node CREATED="1593658153673" ID="ID_ca2de24c495f" MODIFIED="1593658153673" TEXT="1. 默认不加密，但是可以自行加密"></node><node CREATED="1593658153673" ID="ID_bb788d1b78cd" MODIFIED="1593658153673" TEXT="2.Jwt在不加密的情况下，不能将敏感信息写入JWT"></node><node CREATED="1593658153673" ID="ID_3e0e0d63c949" MODIFIED="1593658153673" TEXT="3.JWt不仅可以用于认证，也可以用于交换信息。"></node><node CREATED="1593658153673" ID="ID_03e079a0ee60" MODIFIED="1593658153673" TEXT="4. 有效使用JWT，可以降低服务器查询数据库的次数"></node><node CREATED="1593658153673" ID="ID_9bd73fd0272f" MODIFIED="1593658153673" TEXT="5. 无法控制token"></node></node></node></map>